version: '3'

services:

  backend:
    container_name: backend_container
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: always
    command: sh -c "cd backend && 
                    gunicorn --bind 0.0.0.0:8000 my_site.wsgi"
    volumes:
      - static_volume:/home/user/web/backend/static/
      - ./backend:/home/user/web/backend
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - selenium

  db:
    container_name: db_container
    image: postgres:15.2-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    env_file:
      - ./.env.prod.db

  nginx:
    container_name: nginx_container
    build: ./nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - static_volume:/home/user/web/backend/static/
    depends_on:
      - backend

  selenium:
    container_name: selenium_container
    image: selenium/hub:4.8
    restart: always
    volumes:
      - ./backend:/home/user/web/backend
#    environment:
#      - SE_NODE_GRID_URL=http://localhost:4445/wd/hub
    ports:
      - "4444:4444"

  chrome:
    container_name: chrome_container
    image: selenium/node-chrome:110.0
    restart: always
    volumes:
      - ./backend:/home/user/web/backend
    environment:
      - SE_EVENT_BUS_HOST=selenium
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_PORT=4444
      - SE_NODE_GRID_URL=http://selenium:4445/wd/hub
    depends_on:
      - selenium

  redis:
    container_name: redis_container
    image: redis:7.0.8-alpine
    restart: always

  celery-worker:
    container_name: celery_worker_container
    restart: always
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: sh -c "cd backend &&
                    celery -A my_site worker -l info"
    volumes:
      - ./backend:/home/user/web/backend
    env_file:
      - ./.env.prod.db
      - ./.env.prod
    depends_on:
      - redis
      - db

  celery-beat:
    container_name: celery_beat_container
    restart: always
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: sh -c "cd backend &&
                    celery -A my_site beat -l info"
    volumes:
      - ./backend:/home/user/web/backend
    env_file:
      - ./.env.prod.db
      - ./.env.prod
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
  static_volume: